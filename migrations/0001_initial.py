# Generated by Django 4.1.1 on 2023-04-20 08:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='admin_stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('produck_name', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='anganwadi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Anganwadi_name', models.CharField(max_length=100)),
                ('ward_no', models.CharField(max_length=20)),
                ('panchayat_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='consumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=100)),
                ('adhar_no', models.CharField(max_length=100)),
                ('phone_no', models.CharField(max_length=25)),
                ('type', models.CharField(max_length=25)),
                ('anganwadi_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.anganwadi')),
            ],
        ),
        migrations.CreateModel(
            name='teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('teacher_phone', models.CharField(max_length=100)),
                ('teacher_mail', models.EmailField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.CharField(max_length=100)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('anganawadi_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.anganwadi')),
            ],
        ),
        migrations.CreateModel(
            name='ditribu_teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(max_length=20)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('angw_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.anganwadi')),
                ('stock_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.admin_stock')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.consumer')),
            ],
        ),
        migrations.CreateModel(
            name='distribu_admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(max_length=20)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('angw_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.anganwadi')),
                ('stock_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.admin_stock')),
            ],
        ),
        migrations.AddField(
            model_name='anganwadi',
            name='teacher_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ang.teacher'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('types', models.CharField(default='t', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
